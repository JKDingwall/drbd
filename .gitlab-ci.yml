variables:
  VIRTER_VERSION: v0.5.0
  VMSHED_VERSION: v0.5.0
  BUILD_HELPERS_VERSION: fa389c8d20dd8f6a7a3b3973bdb14fc6597008cf

stages:
  - build
  - test

.setup-lbbuild:
  before_script:
    - . .gitlab/gitlab-utils.sh
    - drbd_prepare_tools
    - drbd_fetch_lbbuildctl

# rules clause determining whether to build
.rules-build:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'drbd-9.0'
    - if: $CI_COMMIT_BRANCH == 'master'

build:
  stage: build
  extends: [ .rules-build, .setup-lbbuild ]
  image: $LINBIT_DOCKER_REGISTRY/build-helpers:$BUILD_HELPERS_VERSION
  script:
    - |
      mkdir -p drbd-test-bundle
      curl -sSL $LINBIT_REGISTRY_URL/repository/test-suite/drbd-test-bundle.tgz | tar -C drbd-test-bundle -xvzf -
    - |
      DRBD_VERSION=10.0.0.$CI_COMMIT_SHA
      drbd_dummy_release "$DRBD_VERSION" 1
    - |
      make FORCE=1 PRESERVE_DEBIAN=1 REL_VERSION="$DRBD_VERSION" tarball
      echo DRBD_VERSION=$DRBD_VERSION >> build.env
    - curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD --upload-file drbd-*.tar.gz $LINBIT_REGISTRY_URL/repository/lbbuild-upstream/
    - META_JSON=$(rq -t < drbd-test-bundle/virter/vms.toml | jq -r '.vms[].metadata')
    - |
      echo "$META_JSON" | jq -r '. | "-d " + .BuildDistribution + " -k " + .KernelRelease' | parallel --colsep ' ' -k -j24 \
        lbbuildctl build drbd --arch amd64 --ci -v "${DRBD_VERSION}-1" --compat-only -l \
          -e LINBIT_REGISTRY_USER=$LINBIT_REGISTRY_USER \
          -e LINBIT_REGISTRY_PASSWORD=$LINBIT_REGISTRY_PASSWORD \
          -e LINBIT_REGISTRY_URL=$LINBIT_REGISTRY_URL \
          {}
    - pushd drbd/drbd-kernel-compat
    - ASSETS_JSON=$(curl -ksSL "$LINBIT_REGISTRY_URL/service/rest/v1/search/assets?repository=drbd-compat&group=/${DRBD_VERSION}-1")
    - test $(echo "$ASSETS_JSON" | jq '.items | length') -ne 0 || (echo "ERROR No nexus assets found for drbd version ${DRBD_VERSION}-1"; exit 1)
    - URLS=$(echo "$ASSETS_JSON" | jq -r '.items[].downloadUrl')
    - FILES=$(echo "$URLS" | xargs basename -a)
    - |
      echo "$URLS" | while read url; do
        curl -ksSLO "$url"
      done
    - ./build_cocci_cache.sh $FILES
    - popd
    - make -j $(nproc) -C drbd compat
    - make FORCE=1 PRESERVE_DEBIAN=1 REL_VERSION="$DRBD_VERSION" tarball
    - curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD --upload-file drbd-*.tar.gz $LINBIT_REGISTRY_URL/repository/lbbuild-upstream/
    - META_JSON=$(rq -t < drbd-test-bundle/virter/vms.toml | jq -r '.vms[].metadata')
    - |
      echo "$META_JSON" | jq -r '. | "-d " + .BuildDistribution + " -k " + .KernelRelease' | parallel --colsep ' ' -k -j24 \
        lbbuildctl build drbd --arch amd64 --ci -v "${DRBD_VERSION}-1" -l \
          -e LINBIT_REGISTRY_USER=$LINBIT_REGISTRY_USER \
          -e LINBIT_REGISTRY_PASSWORD=$LINBIT_REGISTRY_PASSWORD \
          -e LINBIT_REGISTRY_URL=$LINBIT_REGISTRY_URL \
          {}
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - drbd-test-bundle
    expire_in: 1 week


test:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - libvirt
  cache:
    paths:
      - download
  script:
    - . .gitlab/gitlab-utils.sh
    - |
      drbd_prepare_tools
      drbd_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
      drbd_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
    - |
      for BASE_IMAGE in $(rq -t < drbd-test-bundle/virter/vms.toml | jq -r '.vms[] | .base_image'); do
        if ! virsh vol-info --pool default $BASE_IMAGE; then
          virter image pull --url $LINBIT_REGISTRY_URL/repository/vm-image/$BASE_IMAGE $BASE_IMAGE
        fi
      done
    - |
      mkdir -p packages
      cp drbd-test-bundle/target/drbd-test-target.tgz packages/
    - docker image pull $LINBIT_DOCKER_REGISTRY/drbd9-tests:latest
    - >-
      vmshed
      --jenkins "$(readlink -f tests-out)"
      --startvm 40
      --nvms 20
      --vms drbd-test-bundle/virter/vms.toml
      --tests drbd-test-bundle/virter/tests.toml
      --set values.TestSuiteImage=$LINBIT_DOCKER_REGISTRY/drbd9-tests:latest
      --set values.DrbdVersion=${DRBD_VERSION}
      --set '"""values.RepositoryPackages=exxe\,drbd-utils"""'
  dependencies:
    - build
  artifacts:
    # provide a convenient name so that the downloaded artifacts can be identified
    name: $CI_PROJECT_NAME-$CI_JOB_ID
    paths:
      - tests-out/
    when: always
    reports:
      junit: tests-out/test-results/*.xml
