variables:
  BUILD_HELPERS_VERSION: 97370543f06f09c81604b1bb952c4571ffbe35fe
  # we have to change the way GitLab CI clones the repository.
  # by default, it is shallow, which gives us a wrong commit count when
  # we do `git rev-list --count origin/master` below.
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: normal

stages:
  - check
  - build
  - test

.setup-lbbuild:
  before_script:
    - . gitlab-utils.sh && . .gitlab/gitlab-utils.sh
    - ci_prepare_tools
    - ci_fetch_rq
    - ci_fetch_lbbuildctl
    - |
      kernels_from_vms() {
        mkdir -p drbd-test-bundle
        curl -sSL $LINBIT_REGISTRY_URL/repository/test-suite/drbd-test-bundle.tgz | tar -C drbd-test-bundle -xzf -
        rq -t < drbd-test-bundle/virter/vms.toml | \
          jq -r '.vms[].metadata | .BuildDistribution + " " + .KernelRelease'
      }

      # parameters: [version] [release] [rel-version] [kernels]
      # kernels should be a string with lines with the format: "[distribution] [kernel version]"
      drbd_build () {
        local version="$1"
        local release="$2"
        local rel_version="$3"
        local kernels="$4"

        set -x

        drbd_dummy_release "$version" "$release" "$rel_version"
        make FORCE=1 PRESERVE_DEBIAN=1 REL_VERSION="$rel_version" tarball
        curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD \
          --upload-file drbd-*.tar.gz \
          $LINBIT_REGISTRY_URL/repository/lbbuild-upstream/

        echo "$kernels" | parallel --colsep ' ' -k -j24 \
          lbbuildctl build drbd --arch amd64 --ci -v "$rel_version" --compat-only -l \
            -e LINBIT_REGISTRY_USER=$LINBIT_REGISTRY_USER \
            -e LINBIT_REGISTRY_PASSWORD=$LINBIT_REGISTRY_PASSWORD \
            -e LINBIT_REGISTRY_URL=$LINBIT_REGISTRY_URL \
            -d {1} -k {2}

        pushd drbd/drbd-kernel-compat
        local compat_hs
        while read line; do
          kver=${line#* } # everything after " " -> the kernel version
          curl -fsSLO "$LINBIT_REGISTRY_URL/repository/drbd-compat/$rel_version/compat.h.$kver"
          compat_hs+=("compat.h.$kver")
        done <<< "$kernels"
        ./build_cocci_cache.sh ${compat_hs[@]}
        popd

        make -j $(nproc) -C drbd compat
        make FORCE=1 PRESERVE_DEBIAN=1 REL_VERSION="$rel_version" tarball
        curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD \
          --upload-file drbd-*.tar.gz \
          $LINBIT_REGISTRY_URL/repository/lbbuild-upstream/

        echo "$kernels" | parallel --colsep ' ' -k -j24 \
          lbbuildctl build drbd --arch amd64 --ci -v "$rel_version" -l \
            -e LINBIT_REGISTRY_USER=$LINBIT_REGISTRY_USER \
            -e LINBIT_REGISTRY_PASSWORD=$LINBIT_REGISTRY_PASSWORD \
            -e LINBIT_REGISTRY_URL=$LINBIT_REGISTRY_URL \
            -d {1} -k {2}

        set +x
      }

# rules clause determining whether to build
.rules-build:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'drbd-9.0'
    - if: $CI_COMMIT_BRANCH == 'master'

check:coccicheck:
  stage: check
  extends: [ .rules-build ]
  image: szeder/coccinelle:1.1.0-1
  script:
    - make coccicheck

check:check-compat:
  stage: check
  extends: [ .rules-build ]
  image: szeder/coccinelle:1.1.0-1
  script:
    - make check-compat

build:for-tests:
  stage: build
  extends: [ .rules-build, .setup-lbbuild ]
  image: $LINBIT_DOCKER_REGISTRY/build-helpers:$BUILD_HELPERS_VERSION
  script:
    - DRBD_VERSION=9.1.0.$CI_COMMIT_SHA
    - echo DRBD_VERSION=$DRBD_VERSION >> build.env
    - drbd_build $DRBD_VERSION 1 $DRBD_VERSION "$(kernels_from_vms)"
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - drbd-test-bundle
      - drbd/drbd-kernel-compat/cocci_cache
    when: always
    expire_in: 1 week
  needs: []

build-latest:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == 'drbd-9.0'
    - if: $CI_COMMIT_BRANCH == 'master'
  extends: [ .setup-lbbuild ]
  image: $LINBIT_DOCKER_REGISTRY/build-helpers:$BUILD_HELPERS_VERSION
  script:
    - DRBD_VERSION=9.1.0.latest
    - DRBD_RELEASE=$(git rev-list --count origin/master)
    - drbd_build $DRBD_VERSION $DRBD_RELEASE $DRBD_VERSION "$(kernels_from_vms)"
  needs: []

test:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - libvirt
  cache:
    paths:
      - download
  script:
    - . drbd-test-bundle/virter/version.env
    - |
      curl -sSfL -u gitlab-ci-token:$CI_JOB_TOKEN https://gitlab.at.linbit.com/linbit/build-helpers/-/archive/$BUILD_HELPERS_VERSION/ignored.tar.gz | tar -xvzf -
      mv build-helpers-* build-helpers
      . build-helpers/gitlab-utils.sh
    - |
      ci_prepare_tools
      ci_fetch_rq
      ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
      ci_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
    - docker image pull $LINBIT_DOCKER_REGISTRY/drbd9-tests:latest
    - |
      export DRBD_VERSION=$DRBD_VERSION
      export DRBD_UTILS_VERSION=9.0.0.latest-*
      export DRBD9_TESTS_VERSION=latest
      ./drbd-test-bundle/virter/run-test.sh
  dependencies:
    - build:for-tests
  artifacts:
    # provide a convenient name so that the downloaded artifacts can be identified
    name: $CI_PROJECT_NAME-$CI_JOB_ID
    paths:
      - tests-out/
    when: always
    reports:
      junit: tests-out/test-results/*.xml
  needs:
    - build:for-tests
